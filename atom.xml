<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>ScarShow | 刀疤說</title>
	<subtitle>I know that I don't know</subtitle>
	<link href="http://scar.simcz.tw/atom.xml" rel="self" />
	<link href="http://scar.simcz.tw/" />
	<id>urn:uuid:3159d1f2-649f-a40c-657e-e28861a25d07</id>
	<updated>2013-04-04T04:34:34+08:00</updated>
	<entry>
		<title>關於PHP原生樣板引擎</title>
		<link href="http://scar.simcz.tw/article/2013/04/04/about-php-native-template-engine" />
		<id>urn:uuid:ce4e0c54-cdcb-d1d0-3553-21771ccecc7c</id>
		<updated>2013-04-04T04:34:34+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;想寫一個簡單的網頁程式，但現在市面上PHP的樣板引擎百百種，那該選什麼樣的樣板引擎來搭配好呢？...等等先不說這個，你有聽說過PHP本身也是樣板引擎嗎？沒錯它是。&lt;/p&gt;

&lt;p&gt;在這之前我們先看看Wikipedia是怎麼解釋樣板引擎：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;A (web) template engine is software that is designed to process web templates and content information to produce output web documents. It runs in the context of a template system.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;它說明了樣板引擎的功能是將內容資訊與網頁樣板結合，然後產生出網頁文件的這一個行為。將網頁的內容與網頁樣板切開，這個不用幾行程式碼PHP就可以做到。&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>PHP字串連接</title>
		<link href="http://scar.simcz.tw/article/2013/04/02/php-concatenate-string" />
		<id>urn:uuid:58a24f29-9a86-c6a3-034a-b825af962948</id>
		<updated>2013-04-04T04:34:34+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;在PHP中字串連接的方法與其它的語言有著非常的不同，我們都知道以C語言來說我們可以使用函式&lt;code&gt;strcat()&lt;/code&gt;來連接兩個字元陣列，而在Java中我們可以使用&lt;code&gt;+&lt;/code&gt;運算子來做字串的連接。&lt;/p&gt;

&lt;p&gt;而PHP呢？PHP不同與上述語言，它則使用&lt;code&gt;.&lt;/code&gt;運算子來連接字串，而且除了&lt;code&gt;.&lt;/code&gt;以外還有許多不同的方式也可以連接字串。&lt;/p&gt;

&lt;h2&gt;基本使用&lt;/h2&gt;

&lt;h3&gt;字串宣告&lt;/h3&gt;

&lt;p&gt;在PHP當中可以使用&lt;code&gt;&#039;&lt;/code&gt;或者是&lt;code&gt;&quot;&lt;/code&gt;來宣告字串，但是這兩個符號宣告出的字串其實是不相同的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$str = &quot;Hi, I am Tony.\nNice to meet you.&quot;;
echo $str;
// Hi, I am Tony.
// Nice to meet you.

$str = &#039;Hi, I am Tony.\nNice to meet you.&#039;;
echo $str;
// Hi, i am Tony,\nNice to meet you.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由上面範例可以得知使用&lt;code&gt;&quot;&lt;/code&gt;宣告的字串可以讓跳脫字元發揮出作用，而使用&lt;code&gt;&#039;&lt;/code&gt;宣告的字串則是純字串你輸入什麼就輸出什麼。&lt;/p&gt;

&lt;h3&gt;字串連接&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
$name = &#039;Tony&#039;;

echo &quot;Hi &quot; . $name; // Hi Tony
echo &#039;Hi &#039; . $name; // Hi Tony
echo &quot;Hi $name&quot;;    // Hi Tony
echo &#039;Hi $name&#039;;    // Hi $name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那麼字串與變數的連接，在&lt;code&gt;&quot;&lt;/code&gt;可以很彈性的使用變數，而&lt;code&gt;&#039;&lt;/code&gt;只能夠使用&lt;code&gt;.&lt;/code&gt;來做連接，而兩者都可以使用格式化輸出&lt;code&gt;sprintf()&lt;/code&gt;但這邊就先不提。&lt;/p&gt;

&lt;p&gt;由上面得知&lt;code&gt;&quot;&lt;/code&gt;可以很彈性的連接變數，那麼它除了變數的連接外，那與陣列、函式以及物件之間該如何連接以及可行性？我們看下面的範例。&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>NanoCLI - PHP CLI開發工具 (2)</title>
		<link href="http://scar.simcz.tw/article/2013/03/16/nanocli-a-simply-php-cli-development-tools-2" />
		<id>urn:uuid:ef085a12-ac33-77a7-4158-5a9b7df22e04</id>
		<updated>2013-04-04T04:34:34+08:00</updated>
		<summary type="html">&lt;p&gt;上次提到了NanoCLI的基本介紹，這邊延續上次的help指令實作以及標準輸入輸出的說明。&lt;/p&gt;

&lt;h2&gt;使用&lt;/h2&gt;

&lt;h3&gt;實作指令 Help.php&lt;/h3&gt;

&lt;p&gt;接下來要實作上次提到的help指令，這邊要注意的是除了一開始的指令只要是以參數方式呼叫的指令都要加上Namespace這樣是要配合autoload的使用，記得help.php要放對資料夾位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php

// 設定namespace
namespace Test;

use NanoCLI\IO;

class Help extends NanoCLI\Command {
    public function __construct() {
        parent::__construct();
    }

    public function run() {
        IO::writeln(&quot;This is Command: help\n&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>NanoCLI - PHP CLI開發工具 (1)</title>
		<link href="http://scar.simcz.tw/article/2013/03/16/nanocli-a-simply-php-cli-development-tools-1" />
		<id>urn:uuid:8e0040ec-7bf3-61c7-2eaa-3c8aaecbc000</id>
		<updated>2013-04-04T04:34:34+08:00</updated>
		<summary type="html">&lt;p&gt;關於NanoCLI這個工具原本想都沒有想過要去製作它，它是伴隨著Pointless一起誕生出來的，除了NanoCLI之外還有一個CSS Compressor這個小工具但這邊先不說。&lt;/p&gt;

&lt;p&gt;約一年前，那時候為了想要讓Pointless看起來像是使用內建指令那樣去操作，所以就另外製作了NanoCLI讓Pointless能順利實作各種CLI的指令，到現在NanoCLI只有少少的3個檔案而且總程式不超過250行，使用上也很簡單。&lt;/p&gt;

&lt;h2&gt;系統要求&lt;/h2&gt;

&lt;p&gt;PHP 5.3+&lt;/p&gt;

&lt;h2&gt;功能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;指令呼叫 (ex. &lt;code&gt;$ ./cli.php command&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;指令選項 (ex. &lt;code&gt;$ ./cli.php command -v -al&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;指令配置 (ex. &lt;code&gt;$ ./cli.php command --prefix=/usr/local/bin&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;文字色彩&lt;/li&gt;
&lt;li&gt;文字界面讀寫&lt;/li&gt;
&lt;li&gt;Namespace 以及 Autoload&lt;/li&gt;
&lt;/ul&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>Phar建立與使用</title>
		<link href="http://scar.simcz.tw/article/2013/01/09/php-phar-create-and-use" />
		<id>urn:uuid:3a8ef3ac-db05-1bbb-f7bb-0afa23ca7e4f</id>
		<updated>2013-04-04T04:34:34+08:00</updated>
		<summary type="html">&lt;p&gt;這幾天為了Pointless而嘗試使用Phar去包裝整套系統，但除了官方文件之外，中文的資源相當的少，所以我在這邊筆記一下使用方法與問題&lt;/p&gt;

&lt;h2&gt;Phar&lt;/h2&gt;

&lt;p&gt;Phar(PHP Archive)它是PHP的extension，就像是Java的jar一樣可以用來打包程式碼，可讓專案易於散佈並安裝使用&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
</feed>