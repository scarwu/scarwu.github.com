<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>ScarShow | 刀疤說</title>
	<subtitle>I know that I don't know</subtitle>
	<link href="http://scar.simcz.tw/atom.xml" rel="self" />
	<link href="http://scar.simcz.tw/" />
	<id>urn:uuid:464c6fd9-b978-a600-ead3-b2b463ea8f3b</id>
	<updated>2013-08-13T02:05:22+08:00</updated>
	<entry>
		<title>Hadoop安裝與設定</title>
		<link href="http://scar.simcz.tw/article/2013/08/13/hadoop-install-and-setup" />
		<id>urn:uuid:1970bd8e-4be7-373a-ad0a-5110ff1a0704</id>
		<updated>2013-08-13T01:04:43+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;Hadoop這套工具主要用做於平行運算，它其中包含兩個部份&lt;code&gt;MapReduce&lt;/code&gt;以及&lt;code&gt;HDFS&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MapReduce&lt;/code&gt;的部份主要是用做於平行運算、而&lt;code&gt;HDFS&lt;/code&gt;則是一套分散分散式檔案系統，用來儲存於平行運算時所需的大量資料。&lt;/p&gt;

&lt;p&gt;由於某些原因必須使用到&lt;code&gt;Hadoop&lt;/code&gt;中的&lt;code&gt;HDFS&lt;/code&gt;來測試一些項目所以這邊就粗略紀錄一下&lt;code&gt;Hadoop&lt;/code&gt;的安裝過程。&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>NodeJS - Stream行為觀察與事件使用</title>
		<link href="http://scar.simcz.tw/article/2013/05/30/observe-and-using-node-js-stream-event" />
		<id>urn:uuid:0a2b4a22-d7dc-eabb-fe5e-82b4ec0b7e0a</id>
		<updated>2013-05-30T15:57:01+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;在NodeJS使用廣泛的就是&lt;code&gt;Event-driven&lt;/code&gt;的機制，當此機制與串流功能相結合後，便能大幅增進資料傳輸的效能。&lt;/p&gt;

&lt;p&gt;所以今天的主題為NodeJS中Stream的行為觀察，在先前專案中大量使用Stream的功能，所以這邊就寫下一些使用心得。&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>用Raspberry Pi玩PS遊戲</title>
		<link href="http://scar.simcz.tw/article/2013/05/29/playing-ps-game-with-raspberry-pi" />
		<id>urn:uuid:7284f696-24e6-e92f-abf7-2b7383e1312e</id>
		<updated>2013-05-29T21:07:49+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;Raspberry Pi小巧好用拿來打電動很剛好，當作PS遊戲模擬器也是游刃有餘。&lt;/p&gt;

&lt;p&gt;所以在這邊紀錄如何在Raspberry Pi上安裝PCSX ReARMed，它是我們所熟知的PS模擬器PCSX，但它是針對ARM CPU的特製版。&lt;/p&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>試用Android Studio v0.1</title>
		<link href="http://scar.simcz.tw/article/2013/05/16/try-android-studio-v01" />
		<id>urn:uuid:0e1131d4-b930-e4a7-9f78-56fdd27e5f81</id>
		<updated>2013-05-16T15:29:46+08:00</updated>
		<summary type="html">&lt;p&gt;今天凌晨看了Google I/O的keynote，Google發表了Android Studio，再大會上展示了它擁有同時預覽在不同解析度上的界面編輯功能看起來很酷。就在剛剛我發現Andoird Developer上面已經可以下載了，馬上載下來安裝。&lt;/p&gt;

&lt;p&gt;不知道Android Studio它會不會像&lt;code&gt;Eclipse + ADT&lt;/code&gt;一樣一戳就爆炸呢？之前在接案開發Android APP還有相關的教學課程上&lt;code&gt;Eclipse + ADT&lt;/code&gt;真的不太穩定。不知道Android Studio會不會比較好用，另外Android Studio是用IntelliJ IDEA為基礎修改的現在的版號是&lt;code&gt;v0.1&lt;/code&gt;，Google官方對它的介紹為：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Android Studio is a new Android development environment based on IntelliJ IDEA. Similar to Eclipse with the ADT Plugin, Android Studio provides integrated Android developer tools for development and debugging.&quot;&lt;/p&gt;
&lt;/blockquote&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>NodeJS - dgram error with EBADF</title>
		<link href="http://scar.simcz.tw/article/2013/04/29/node-js-dgram-error-with-EBADF" />
		<id>urn:uuid:36022011-756d-15e1-9908-fbb52cc99621</id>
		<updated>2013-04-29T21:28:17+08:00</updated>
		<summary type="html">&lt;p&gt;最近把NodeJS從原本的&lt;code&gt;v0.8.x&lt;/code&gt;更新到最新的&lt;code&gt;v0.10.x&lt;/code&gt;，結果程式就炸了！程式就給我吐出&lt;code&gt;Error: setBroadcast EBADF&lt;/code&gt;，結果是&lt;code&gt;dgram&lt;/code&gt;炸了，不管是&lt;code&gt;setBroadcast&lt;/code&gt;或者是&lt;code&gt;setTTL&lt;/code&gt;都一樣會炸掉，問Google大神也問不出答案。&lt;/p&gt;

&lt;p&gt;然後我就查了一下&lt;code&gt;EBADF&lt;/code&gt;到底是什麼意思，它是一個socket的錯誤碼，原文是&lt;code&gt;The socket argument is not a valid file descriptor.&lt;/code&gt;，意思是非法的socket代號，我們來看原本炸掉的程式碼。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;#!/usr/bin/env node

&#039;use strict&#039;;

var dgram = require(&#039;dgram&#039;),
    ip = &#039;127.0.0.1&#039;,
    port = 9000;

client.bind(port);
client.setBroadcast(true);
client.send(message, 0, message.length, port, ip, callback);
&lt;/code&gt;&lt;/pre&gt;

</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
</feed>