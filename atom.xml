<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>ScarShow | 刀疤說</title>
	<subtitle>I know that I don't know</subtitle>
	<link href="http://scar.simcz.tw/atom.xml" rel="self" />
	<link href="http://scar.simcz.tw/" />
	<id>urn:uuid:2678fdc5-5c0a-82f6-3383-a3112866cd7f</id>
	<updated>2014-01-19T20:53:15+08:00</updated>
	<entry>
		<title>Chrome - Enable Hardware Graphics</title>
		<link href="http://scar.simcz.tw/article/2014/01/19/chrome-enable-hardware-graphics" />
		<id>urn:uuid:a3b360b7-5d6e-9c12-8a64-7f83e97a6a7c</id>
		<updated>2014-01-19T12:48:58+08:00</updated>
		<summary type="html">&lt;h2&gt;難得&lt;/h2&gt;

&lt;p&gt;很難得可以在一天內發兩篇文章，在上一篇文末提到&lt;code&gt;WebGL&lt;/code&gt;打不開的問題，那是個誤會，真的。&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;Chrome&lt;/code&gt;的&lt;code&gt;chrome://flags&lt;/code&gt;裡有一個選項&lt;code&gt;Override software rendering list&lt;/code&gt;可以開啟硬體加速，在更新驅動程式前我怎樣試都不行，所以我就以為沒有用。&lt;/p&gt;

&lt;p&gt;其實在驅動程式更新之後就已經可以使用了，只是硬體加速還要另外開啟，讓我產生&lt;code&gt;WebGL&lt;/code&gt;無法開啟的錯覺。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;正常啟用流程&lt;/h2&gt;

&lt;p&gt;我們可以在&lt;code&gt;Chrome&lt;/code&gt;中使用&lt;code&gt;chrome://gpu&lt;/code&gt;這個連結去確認是否有開啟硬加速，在一般情況下都是呈現下方的狀態。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome-enable-hardware-graphics/gpu001.jpg&quot; alt=&quot;Hardware Graphics&quot;&gt;&lt;/p&gt;

&lt;p&gt;更據上面所顯示的問題並去解決，就能開啟硬體加速，首先更據目前所用的作業統以及顯示卡，更新相對應的驅動程式。&lt;/p&gt;

&lt;p&gt;在我的系統上，更新驅動程式後的狀態如下圖，原本紅紅一片的狀態逐漸變為正常了，&lt;code&gt;WebGL&lt;/code&gt;也已經可以使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome-enable-hardware-graphics/gpu002.jpg&quot; alt=&quot;Hardware Graphics&quot;&gt;&lt;/p&gt;

&lt;p&gt;最後將&lt;code&gt;chrome://flags&lt;/code&gt;中的&lt;code&gt;Override software rendering list&lt;/code&gt;啟動，並重新開啟&lt;code&gt;Chrome&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome-enable-hardware-graphics/flags001.jpg&quot; alt=&quot;Hardware Graphics&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome-enable-hardware-graphics/flags002.jpg&quot; alt=&quot;Hardware Graphics&quot;&gt;&lt;/p&gt;

&lt;p&gt;最後就會得一片綠油油的正常狀態。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome-enable-hardware-graphics/gpu003.jpg&quot; alt=&quot;Hardware Graphics&quot;&gt;&lt;/p&gt;

&lt;h2&gt;爽&lt;/h2&gt;

&lt;p&gt;接下就爽爽用&lt;code&gt;Chrome&lt;/code&gt;上的硬體加速吧。&lt;/p&gt;
</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>Ubuntu 13.10 install AMD Catalyst 13.12</title>
		<link href="http://scar.simcz.tw/article/2014/01/19/ubuntu-13-10-install-amd-catalyst-13-12" />
		<id>urn:uuid:d2c45662-8551-28ca-e998-b7c95093c3e4</id>
		<updated>2014-01-19T10:30:55+08:00</updated>
		<summary type="html">&lt;h2&gt;不解&lt;/h2&gt;

&lt;p&gt;不知道為什麼，只要碰到顯示卡驅動程式的安裝，我就很容易讓我的機器爆炸，這一定有問題，所以還是趕快把這次成功安裝的過程記錄下來，避免之後又爆了。&lt;/p&gt;

&lt;p&gt;安裝驅動有這麼難嗎？很難，因為每次都爆炸XD&lt;/p&gt;

&lt;p&gt;平常我也不想去更新的我的顯示卡驅動，但是&lt;code&gt;Chrome&lt;/code&gt;告訴我&lt;code&gt;ATI/AMD cards with older or third-party drivers&lt;/code&gt;，我只是想開啟&lt;code&gt;WebGL&lt;/code&gt;而已，為了能夠用&lt;code&gt;WebGL&lt;/code&gt;還是更新吧。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;安裝套件&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade -y
sudo apt-get install cdbs dh-make dkms execstack dh-modaliases linux-headers-generic libqtgui4

# for x86_64 (64bit)
sudo apt-get install lib32gcc1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;下載 AMD Catalyst&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mkdir amd-catalyst &amp;amp;&amp;amp; cd amd-catalyst
wget --referer=&#039;http://support.amd.com/en-us/download/desktop?os=Linux+x86&#039; http://www2.ati.com/drivers/linux/amd-catalyst-13.12-linux-x86.x86_64.zip
unzip amd-catalyst-13.12-linux-x86.x86_64.zip
chmod +x amd-catalyst-13.12-linux-x86.x86_64.run
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;編譯套件&lt;/h2&gt;

&lt;h3&gt;Patch kcl_acpi.c&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;./amd-catalyst-13.12-linux-x86.x86_64.run --extract catalyst

cd catalyst
vim common/lib/modules/fglrx/build_mod/kcl_acpi.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把&lt;code&gt;kcl_acpi.c&lt;/code&gt;第990行以後的&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;c&quot;&gt;#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3,6,3)    
    if (!ACPI_SUCCESS(acpi_get_table_with_size(id, 0, &amp;amp;hdr, &amp;amp;tbl_size)))
#else
    tbl_size = 0x7fffffff;
    if (!ACPI_SUCCESS(acpi_get_table(id, 0, &amp;amp;hdr)))
#endif
    {
        return KCL_ACPI_ERROR;
    }    
    ((acpi_table_handler)handler)(hdr);
    return KCL_ACPI_OK;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;換成這個&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;c&quot;&gt;#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3,6,3)    
    if (!ACPI_SUCCESS(acpi_get_table_with_size(id, 0, &amp;amp;hdr, &amp;amp;tbl_size)))
#else
    tbl_size = 0x7fffffff;
    if (!ACPI_SUCCESS(acpi_get_table(id, 0, &amp;amp;hdr)))
#endif
    {
        return KCL_ACPI_ERROR;
    }
#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3,9,1)
    ((acpi_tbl_table_handler)handler)(hdr);
#else
    ((acpi_table_handler)handler)(hdr);
#endif
    return KCL_ACPI_OK;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;開始編譯&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo ./ati-installer.sh 13.251 --buildpkg Ubuntu/saucy
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;安裝 .deb 檔&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd ..
sudo dpkg -i fglrx*.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;設定環境&lt;/h2&gt;

&lt;h3&gt;產生新的 xorg.conf&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo amdconfig --initial -f
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;選擇系統驅動程式&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# choice /usr/lib/fglrx/ld.so.conf
sudo update-alternatives --config x86_64-linux-gnu_gl_conf
sudo ldconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下來就開心重新開機吧！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確認是否安裝成功可以用下面的指令做檢查&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fglrxinfo
fgl_glxgears
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;更新失敗&lt;/h3&gt;

&lt;p&gt;人生中難免會有風險，如果你重新開機後，發現螢幕上有國防布的話，那只好用以下方式修復&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etx/X11/xorg.conf.original /etc/X11/xorg.conf

# choice /usr/lib/x86_64-linux-gnu/mesa/ld.so.conf
sudo update-alternatives --config x86_64-linux-gnu_gl_conf
sudo ldconfig

sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;最後&lt;/h2&gt;

&lt;p&gt;更新驅動就花了我兩個早上，終於更新成功了，但是&lt;code&gt;Chrome&lt;/code&gt;的&lt;code&gt;WebGL&lt;/code&gt;還是不給開...&lt;/p&gt;

&lt;p&gt;這一定有誤會。&lt;/p&gt;

&lt;h3&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://support.amd.com/en-us/download&quot; target=&quot;_blank&quot;&gt;Download Driver - AMD Graphics Drivers and Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.cchtml.com/index.php/Ubuntu_Saucy_Installation_Guide&quot; target=&quot;_blank&quot;&gt;Unoffical AMD Linux Community - Ubuntu Saucy Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/moldcraft/8116528&quot; target=&quot;_blank&quot;&gt;Install AMD Catalyst 13.12 Driver with patch on Ubuntu 13.10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>ZSH - history-search-backward/forward</title>
		<link href="http://scar.simcz.tw/article/2014/01/14/zsh-history-search-backward-and-forward" />
		<id>urn:uuid:c104f70b-f01c-0610-f999-ddf6e584f625</id>
		<updated>2014-01-14T08:50:49+08:00</updated>
		<summary type="html">&lt;p&gt;原本&lt;code&gt;oh-my-zsh&lt;/code&gt;在&lt;code&gt;Ubuntu 12.04 LTS&lt;/code&gt;以及&lt;code&gt;Arch Linux&lt;/code&gt;用好好的&lt;code&gt;history-search-backward&lt;/code&gt;、&lt;code&gt;history-search-forward&lt;/code&gt;，到了&lt;code&gt;Ubuntu 13.10&lt;/code&gt;就不能用了，查了一下&lt;code&gt;ZSH&lt;/code&gt;雖然版號不一樣，不知道是不是因為發行版影響，因為&lt;code&gt;Arch Linux&lt;/code&gt;的&lt;code&gt;ZSH&lt;/code&gt;版本還比&lt;code&gt;Ubuntu 13.10&lt;/code&gt;新。&lt;/p&gt;

&lt;p&gt;下面是各個發行版的&lt;code&gt;Z Shell&lt;/code&gt;版號。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Ubuntu 12.04 LTS : 4.3.17
Ubuntu 12.10     : 5.0.0
Ubuntu 13.04     : 5.0.0
Ubuntu 13.10     : 5.0.2
Arch Linux       : 5.0.5
&lt;/code&gt;&lt;/pre&gt;

&lt;!--more--&gt;

&lt;p&gt;算了至少功能沒有那就自己加上去，在&lt;code&gt;~/.zshrc&lt;/code&gt;中加入以下兩行就行了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bindkey &quot;${key[Up]}&quot; history-search-backward
bindkey &quot;${key[Down]}&quot; history-search-forward
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接著重起&lt;code&gt;terminal&lt;/code&gt;或是&lt;code&gt;source .zshrc&lt;/code&gt;一切就完成了。&lt;/p&gt;
</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>Express + Jade/LESS/Coffee with LiveReload</title>
		<link href="http://scar.simcz.tw/article/2014/01/03/express-jade-less-coffee-with-livereload" />
		<id>urn:uuid:e6b3a8b3-2368-4ead-4c48-8048c7cf69df</id>
		<updated>2014-01-03T11:23:52+08:00</updated>
		<summary type="html">&lt;h2&gt;廢話&lt;/h2&gt;

&lt;p&gt;2014年的第一篇文，去年算是生中的轉折，從今年開始已不是學生，但是學習不能停止，所以趁著比較有空的時候把TODO中要學的東西全部湊合在一起，混在一起當撒尿牛丸！&lt;/p&gt;

&lt;p&gt;平常喜歡自幹習慣了，難得來用用別人已經做好的東西。這邊就先來用&lt;code&gt;Express&lt;/code&gt;來搭配其它東西來開發網站。這邊用到的套件有&lt;code&gt;Jade&lt;/code&gt;、&lt;code&gt;LESS&lt;/code&gt;、&lt;code&gt;CoffeeScript&lt;/code&gt;以及&lt;code&gt;LiveReload&lt;/code&gt;。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3&gt;&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot;&gt;Express&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;web applicaion framework for node&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可用於建立網站應用程式。是一套流行的&lt;code&gt;NodeJS&lt;/code&gt;套件。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://jade-lang.com/&quot; target=&quot;_blank&quot;&gt;Jade&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;Node Template Engine&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;擁有自己一套簡潔語法以及新的特性，用來產生HTML格式。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://lesscss.org/&quot; target=&quot;_blank&quot;&gt;LESS&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;The dynamic stylesheet language&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;支援&lt;code&gt;Variable&lt;/code&gt;、&lt;code&gt;Mixin&lt;/code&gt;、&lt;code&gt;Nested Rule&lt;/code&gt;...等，並可以編譯成&lt;code&gt;CSS&lt;/code&gt;供瀏覽器使用。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://coffeescript.org/&quot; target=&quot;_blank&quot;&gt;CoffeeScript&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;CoffeeScript is a little language that compiles into JavaScript&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;它將&lt;code&gt;JavaScript&lt;/code&gt;的語法簡化，並提供一些新的特性來強化，可產生出符合規定且嚴謹的&lt;code&gt;JavaScript&lt;/code&gt;程式碼。&lt;/p&gt;

&lt;p&gt;它剛出來的時候超夯的，只是我一直都沒有去使用它。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://livereload.com/&quot; target=&quot;_blank&quot;&gt;LiveReload&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&quot;a happy land where browsers don&#039;t need a Refresh button&quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;寫網頁最常做的事情就是不斷、不斷、不斷的Refresh頁面，它可以在檔案存檔的當下就自動幫你更新頁面，讓你可以即時看見更改後的結果。&lt;/p&gt;

&lt;p&gt;它有很多的版本，這邊用到的是&lt;code&gt;NodeJS&lt;/code&gt;的版本。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/napcs/node-livereload/&quot; target=&quot;_blank&quot;&gt;node-livereload&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;產生並修改專案&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Express&lt;/code&gt;本身預設的樣板引擎是&lt;code&gt;Jade&lt;/code&gt;，另外內建就能支援&lt;code&gt;LESS&lt;/code&gt;的middleware，在指令中加入參數&lt;code&gt;-c less&lt;/code&gt;就可以了。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;express -c less /path/to/project
cd /path/to/project

vim .package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;package.json&lt;/h3&gt;

&lt;p&gt;接著修改&lt;code&gt;package.json&lt;/code&gt;，加入&lt;code&gt;connect-coffee-script&lt;/code&gt;、&lt;code&gt;livereload&lt;/code&gt;套件設定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;{
    &quot;name&quot;: &quot;application-name&quot;,
    &quot;version&quot;: &quot;0.0.1&quot;,
    &quot;private&quot;: true,
    &quot;scripts&quot;: {
        &quot;start&quot;: &quot;node app.js&quot;
    },
    &quot;dependencies&quot;: {
        &quot;express&quot;: &quot;3.4.7&quot;,
        &quot;jade&quot;: &quot;*&quot;,
        &quot;less-middleware&quot;: &quot;*&quot;
        &quot;connect-coffee-script&quot;: &quot;*&quot;,
        &quot;livereload&quot;: &quot;*&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後就可以用&lt;code&gt;npm&lt;/code&gt;安裝套件了。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;app.js&lt;/h3&gt;

&lt;p&gt;接下來開始修改&lt;code&gt;app.js&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;首先修改&lt;code&gt;LESS Middleware&lt;/code&gt;的設定，將輸出&lt;code&gt;CSS&lt;/code&gt;檔案的資料夾設定到&lt;code&gt;/tmp&lt;/code&gt;，並且將壓縮設定開啟。&lt;/p&gt;

&lt;p&gt;接著加入&lt;code&gt;CoffeeScript Middleware&lt;/code&gt;的設定，同樣也是指定輸出資料夾為&lt;code&gt;/tmp&lt;/code&gt;。最後將剛剛的輸出路徑&lt;code&gt;/tmp&lt;/code&gt;加入到靜態檔案的路徑中。&lt;/p&gt;

&lt;p&gt;將&lt;code&gt;Middleware&lt;/code&gt;輸出檔案的路徑指定到&lt;code&gt;/tmp&lt;/code&gt;有個好處，這樣設定&lt;code&gt;Git Ignore&lt;/code&gt;就可以直接忽略掉這個資料夾，而且輸出的檔案也不會跟原始檔案混雜。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;...

app.use(require(&#039;less-middleware&#039;) ({ 
    src: path.join(__dirname, &#039;public&#039;),
    dest: path.join(__dirname, &#039;tmp&#039;),
    compress: true
}));
app.use(require(&#039;connect-coffee-script&#039;) ({ 
    src: path.join(__dirname, &#039;public&#039;),
    dest: path.join(__dirname, &#039;tmp&#039;)
}));

app.use(express.static(path.join(__dirname, &#039;public&#039;)));
app.use(express.static(path.join(__dirname, &#039;tmp&#039;)));

...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入新的&lt;code&gt;Route rules&lt;/code&gt;讓&lt;code&gt;LESS&lt;/code&gt;及&lt;code&gt;CoffeeScript&lt;/code&gt;的原始檔無法被讀取。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;...

app.all(&#039;*.(coffee|less)&#039;, function (req, res) {
    res.send(404);
});
app.get(&#039;/&#039;, routes.index);
app.get(&#039;/users&#039;, user.list);

...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入&lt;code&gt;LiveReload&lt;/code&gt;的設定，讓它能夠認得&lt;code&gt;Jade&lt;/code&gt;、&lt;code&gt;LESS&lt;/code&gt;以及&lt;code&gt;CoffeeScript&lt;/code&gt;的支援。
&lt;code&gt;Jade&lt;/code&gt;是放在&lt;code&gt;/views&lt;/code&gt;裡，而&lt;code&gt;LESS&lt;/code&gt;、&lt;code&gt;CoffeeScript&lt;/code&gt;則是放在&lt;code&gt;/public&lt;/code&gt;裡，所以讓s&lt;code&gt;LiveReload&lt;/code&gt;個別去監聽資料夾內檔案的變化。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;...

var livereload = require(&#039;livereload&#039;).createServer({
    exts: [&#039;jade&#039;, &#039;less&#039;, &#039;coffee&#039;]
});

livereload.watch(__dirname + &#039;/public&#039;);
livereload.watch(__dirname + &#039;/views&#039;);

...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後別忘了幫瀏覽器安裝&lt;code&gt;LiveReload&lt;/code&gt;的&lt;code&gt;extension&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-)&quot; target=&quot;_blank&quot;&gt;LiveReload Extensions&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;最後只要將&lt;code&gt;express&lt;/code&gt;啟動，並將瀏覽器的&lt;code&gt;LiveReload Extension&lt;/code&gt;連線打它就可以開始開發了。&lt;/p&gt;

&lt;p&gt;下面是&lt;code&gt;app.js&lt;/code&gt;完整的檔案。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var express = require(&#039;express&#039;);
var routes = require(&#039;./routes&#039;);
var user = require(&#039;./routes/user&#039;);
var http = require(&#039;http&#039;);
var path = require(&#039;path&#039;);

var app = express();

// all environments
app.set(&#039;port&#039;, process.env.PORT || 3000);
app.set(&#039;views&#039;, path.join(__dirname, &#039;views&#039;));
app.set(&#039;view engine&#039;, &#039;jade&#039;);
app.use(express.favicon());
app.use(express.logger(&#039;dev&#039;));
app.use(express.json());
app.use(express.urlencoded());
app.use(express.methodOverride());
app.use(app.router);

app.use(require(&#039;less-middleware&#039;) ({ 
    src: path.join(__dirname, &#039;public&#039;),
    dest: path.join(__dirname, &#039;tmp&#039;),
    compress: true
}));
app.use(require(&#039;connect-coffee-script&#039;) ({ 
    src: path.join(__dirname, &#039;public&#039;),
    dest: path.join(__dirname, &#039;tmp&#039;)
}));

app.use(express.static(path.join(__dirname, &#039;public&#039;)));
app.use(express.static(path.join(__dirname, &#039;tmp&#039;)));

// development only
if (&#039;development&#039; == app.get(&#039;env&#039;)) {
  app.use(express.errorHandler());
}

app.all(&#039;*.(coffee|less)&#039;, function (req, res) {
    res.send(404);
});
app.get(&#039;/&#039;, routes.index);
app.get(&#039;/users&#039;, user.list);

http.createServer(app).listen(app.get(&#039;port&#039;), function(){
  console.log(&#039;Express server listening on port &#039; + app.get(&#039;port&#039;));
});

// LiveReload
var livereload = require(&#039;livereload&#039;).createServer({
    exts: [&#039;jade&#039;, &#039;less&#039;, &#039;coffee&#039;]
});

livereload.watch(__dirname + &#039;/public&#039;);
livereload.watch(__dirname + &#039;/views&#039;);
&lt;/code&gt;&lt;/pre&gt;
</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
	<entry>
		<title>修正Ubuntu 13.10小紅點問題</title>
		<link href="http://scar.simcz.tw/article/2013/11/24/fix-ubuntu-trakpoint-problem" />
		<id>urn:uuid:16b2685d-ee94-918a-fa81-480de55bdf41</id>
		<updated>2013-11-24T15:41:34+08:00</updated>
		<summary type="html">&lt;h2&gt;前言&lt;/h2&gt;

&lt;p&gt;上次才說把筆電的作業系統換成&lt;code&gt;Arch Linux&lt;/code&gt;，由於某些因素現在又換回&lt;code&gt;Ubuntu&lt;/code&gt;了...這次想說換成新版的&lt;code&gt;Ubuntu&lt;/code&gt;，之前所遇到的小紅點時不時失效的問題，應該能夠隨著系統更新而解決，天不從人願它還是一樣。&lt;/p&gt;

&lt;p&gt;這次一定要把它修好，小紅點中鍵滾輪這樣好用的東西變成半殘可不是辦法，請示過Google大神找了一些文章，其實大部分也滿零散的，所以我在這邊依照我實際遇到的問題整理一下。&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;問題修正&lt;/h2&gt;

&lt;h3&gt;修正小紅點滾輪&lt;/h3&gt;

&lt;p&gt;我的&lt;code&gt;ThinkPad&lt;/code&gt;是後期出的&lt;code&gt;Edge&lt;/code&gt;系列，所以他的&lt;code&gt;TrackPoint&lt;/code&gt;在系統的變名稱上也跟歷代的&lt;code&gt;TPPS/2 IBM TrackPoint&lt;/code&gt;不同，我的&lt;code&gt;E420s&lt;/code&gt;的&lt;code&gt;TrackPoint&lt;/code&gt;在系統中顯示的是&lt;code&gt;PS/2 Generic Mouse&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;只要將&lt;code&gt;PS/2 Generic Mouse&lt;/code&gt;填入&lt;code&gt;/usr/share/X11/xorg.conf.d/11-evdev-trackpoint.conf&lt;/code&gt;即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# trackpoint users want wheel emulation

Section &quot;InputClass&quot;
    Identifier  &quot;trackpoint catchall&quot;
    MatchIsPointer  &quot;true&quot;
    MatchProduct    &quot;TrackPoint|DualPoint Stick|PS/2 Generic Mouse&quot;
    MatchDevicePath &quot;/dev/input/event*&quot;
    Option  &quot;Emulate3Buttons&quot;   &quot;true&quot;
    Option  &quot;EmulateWheel&quot;  &quot;true&quot;
    Option  &quot;EmulateWheelButton&quot;    &quot;2&quot;
    Option  &quot;XAxisMapping&quot;  &quot;6 7&quot;
    Option  &quot;YAxisMapping&quot;  &quot;4 5&quot;
EndSection
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;修正小紅點失靈&lt;/h3&gt;

&lt;p&gt;這問題從我在使用&lt;code&gt;Ubuntu 12.04&lt;/code&gt;的時候就時常發生，通常只要重新開機或者是將無線滑鼠拔插一下又或者是按幾下&lt;code&gt;TrackPoint&lt;/code&gt;的左右鍵就可恢復。&lt;/p&gt;

&lt;p&gt;主要的問題在於小紅點的驅動載入有問題，所以需要等待，也可能是因為這樣所以會被辨識成&lt;code&gt;PS/2 Generic Mouse&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;要修復這種情形很簡單，只要把&lt;code&gt;/etc/modprobe.d/trackpoint-elantech.conf&lt;/code&gt;填入以下內容即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options psmouse proto=bare
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然後執行指令&lt;code&gt;sudo modprobe -rv psmouse &amp;amp;&amp;amp; sudo modprobe -v psmouse&lt;/code&gt;或是重新開機就完成了。&lt;/p&gt;

&lt;p&gt;不過這樣作還是有缺點，使用這種解決方案會使得沒辦法取消觸控版，那這樣我還是慢慢等小紅點的驅動載入。&lt;/p&gt;

&lt;h3&gt;取消觸控版功能&lt;/h3&gt;

&lt;p&gt;最後就是把實在是有夠難用的觸控版關閉的時候了，利用系統內建的&lt;code&gt;Mouse &amp;amp; Touchpad&lt;/code&gt;把&lt;code&gt;Touchpad&lt;/code&gt;的開關關閉就行了。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;這樣小紅點終於不是半殘，星爺表示：大師兄回來了！&lt;/p&gt;
</summary>
		<author>
			<name>ScarWu</name>
			<uri>http://scar.simcz.tw/</uri>
		</author>
	</entry>
</feed>